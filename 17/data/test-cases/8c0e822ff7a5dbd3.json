{"uid":"8c0e822ff7a5dbd3","name":"User login with correct credentials","fullName":"tests.authentication.test_authorization.TestAuthorization#test_successful_authorization","historyId":"12cc6f157e272bcd6a71994711b9d162","time":{"start":1752931160951,"stop":1752931160951,"duration":0},"description":"\n        Тест проверяет успешную авторизацию пользователя с корректными данными и регистрацией нового пользователя.\n\n        Описание:\n            Пользователь регистрирует новый аккаунт, затем авторизуется, проверяет наличие элементов главной страницы\n            и выходит из системы.\n\n        Шаги:\n            1. Переход на страницу авторизации.\n            2. Проверка заголовка страницы.\n            3. Переход на страницу регистрации.\n            4. Проверка заголовка страницы регистрации.\n            5. Проверка видимости формы.\n            6. Заполнение формы данными.\n            7. Нажатие кнопки регистрации.\n            8. Проверка наличия элементов главной страницы.\n            9. Выход из системы.\n            10. Повторная авторизация.\n            11. Проверка отображения имени пользователя в навбаре.\n\n        Ожидаемый результат:\n            Пользователь успешно регистрируется, авторизуется и видит элементы главной страницы.\n        ","descriptionHtml":"<pre><code>    Тест проверяет успешную авторизацию пользователя с корректными данными и регистрацией нового пользователя.\n\n    Описание:\n        Пользователь регистрирует новый аккаунт, затем авторизуется, проверяет наличие элементов главной страницы\n        и выходит из системы.\n\n    Шаги:\n        1. Переход на страницу авторизации.\n        2. Проверка заголовка страницы.\n        3. Переход на страницу регистрации.\n        4. Проверка заголовка страницы регистрации.\n        5. Проверка видимости формы.\n        6. Заполнение формы данными.\n        7. Нажатие кнопки регистрации.\n        8. Проверка наличия элементов главной страницы.\n        9. Выход из системы.\n        10. Повторная авторизация.\n        11. Проверка отображения имени пользователя в навбаре.\n\n    Ожидаемый результат:\n        Пользователь успешно регистрируется, авторизуется и видит элементы главной страницы.\n</code></pre>\n","status":"broken","statusMessage":"AttributeError: AUTORIZATIO","statusTrace":"self = <authentication.test_authorization.TestAuthorization object at 0x7f7a6d388ed0>\nlogin_page = <pages.authentication.login_page.LoginPage object at 0x7f7a67e73d90>\nregistration_page = <pages.authentication.registration_page.RegistrationPage object at 0x7f7a67e729d0>\ndashboard_page = <pages.dashboard.dashboard_page.DashboardPage object at 0x7f7a67e70190>\n\n    @allure.title(\"User login with correct credentials\")\n    @allure.tag(AllureTag.POSITIVE, AllureTag.END2END)\n    @allure.severity(Severity.BLOCKER)\n    def test_successful_authorization(\n        self,\n        login_page: LoginPage,\n        registration_page: RegistrationPage,\n        dashboard_page: DashboardPage,\n    ):\n        \"\"\"\n        Тест проверяет успешную авторизацию пользователя с корректными данными и регистрацией нового пользователя.\n    \n        Описание:\n            Пользователь регистрирует новый аккаунт, затем авторизуется, проверяет наличие элементов главной страницы\n            и выходит из системы.\n    \n        Шаги:\n            1. Переход на страницу авторизации.\n            2. Проверка заголовка страницы.\n            3. Переход на страницу регистрации.\n            4. Проверка заголовка страницы регистрации.\n            5. Проверка видимости формы.\n            6. Заполнение формы данными.\n            7. Нажатие кнопки регистрации.\n            8. Проверка наличия элементов главной страницы.\n            9. Выход из системы.\n            10. Повторная авторизация.\n            11. Проверка отображения имени пользователя в навбаре.\n    \n        Ожидаемый результат:\n            Пользователь успешно регистрируется, авторизуется и видит элементы главной страницы.\n        \"\"\"\n>       login_page.visit(AppRoute.AUTORIZATIO)\n                         ^^^^^^^^^^^^^^^^^^^^\n\ntests/authentication/test_authorization.py:98: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <enum 'AppRoute'>, name = 'AUTORIZATIO'\n\n    def __getattr__(cls, name):\n        \"\"\"\n        Return the enum member matching `name`\n    \n        We use __getattr__ instead of descriptors or inserting into the enum\n        class' __dict__ in order to support `name` and `value` being both\n        properties for enum members (which live in the class' __dict__) and\n        enum members themselves.\n        \"\"\"\n        if _is_dunder(name):\n            raise AttributeError(name)\n        try:\n            return cls._member_map_[name]\n        except KeyError:\n>           raise AttributeError(name) from None\nE           AttributeError: AUTORIZATIO\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/enum.py:786: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1752931148318,"stop":1752931148318,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1752931148319,"stop":1752931148319,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1752931148319,"stop":1752931148319,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"playwright","time":{"start":1752931148319,"stop":1752931148652,"duration":333},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"save_allure_environment","time":{"start":1752931148319,"stop":1752931148319,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1752931148319,"stop":1752931148319,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"chromium_page","time":{"start":1752931160689,"stop":1752931160950,"duration":261},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"registration_page","time":{"start":1752931160950,"stop":1752931160950,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"login_page","time":{"start":1752931160950,"stop":1752931160950,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"dashboard_page","time":{"start":1752931160950,"stop":1752931160951,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"chromium_page::0","time":{"start":1752931161029,"stop":1752931161089,"duration":60},"status":"passed","steps":[],"attachments":[{"uid":"12fcc98effbcddb5","name":"trace","source":"12fcc98effbcddb5.zip","type":"application/zip","size":92160},{"uid":"be3a1d0fa9a99725","name":"video","source":"be3a1d0fa9a99725.webm","type":"video/webm","size":937}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true},{"name":"playwright::0","time":{"start":1752931200240,"stop":1752931200250,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"save_allure_environment::0","time":{"start":1752931200250,"stop":1752931200250,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"POSITIVE"},{"name":"severity","value":"blocker"},{"name":"parentSuite","value":"LMS system"},{"name":"feature","value":"Authentication"},{"name":"tag","value":"END2END"},{"name":"story","value":"Authorization"},{"name":"suite","value":"Authentication"},{"name":"epic","value":"LMS system"},{"name":"subSuite","value":"Authorization"},{"name":"tag","value":"authorization"},{"name":"tag","value":"regression"},{"name":"host","value":"pkrvmq0rgcvqdmg"},{"name":"thread","value":"5824-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.authentication.test_authorization"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chromium_page","value":"'Browser.WEBKIT'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["authorization","POSITIVE","regression","END2END"]},"source":"8c0e822ff7a5dbd3.json","parameterValues":["'Browser.WEBKIT'"]}