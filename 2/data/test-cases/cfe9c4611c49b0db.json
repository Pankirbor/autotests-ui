{"uid":"cfe9c4611c49b0db","name":"User login with wrong email or password","fullName":"tests.authentication.test_authorization.TestAuthorization#test_wrong_email_or_password_authorization","historyId":"a3209611c392ebe11214033493164eb0","time":{"start":1752918545855,"stop":1752918555363,"duration":9508},"description":"\n        Тест проверяет поведение страницы авторизации при вводе неверной электронной почты или пароля.\n\n        Описание:\n            Пользователь пытается войти с разными комбинациями невалидных данных (пустой email, пустой пароль,\n            корректные данные, но несуществующий аккаунт). После отправки формы проверяется появление уведомления\n            о неверных данных.\n\n        Аргументы:\n            email (str): Электронная почта для входа.\n            password (str): Пароль для входа.\n\n        Шаги:\n            1. Переход на страницу авторизации.\n            2. Проверка видимости формы.\n            3. Заполнение формы данными.\n            4. Клик по кнопке \"Login\".\n            5. Проверка отображения сообщения об ошибке.\n\n        Ожидаемый результат:\n            При вводе неверных данных отображается соответствующее уведомление.\n        ","descriptionHtml":"<pre><code>    Тест проверяет поведение страницы авторизации при вводе неверной электронной почты или пароля.\n\n    Описание:\n        Пользователь пытается войти с разными комбинациями невалидных данных (пустой email, пустой пароль,\n        корректные данные, но несуществующий аккаунт). После отправки формы проверяется появление уведомления\n        о неверных данных.\n\n    Аргументы:\n        email (str): Электронная почта для входа.\n        password (str): Пароль для входа.\n\n    Шаги:\n        1. Переход на страницу авторизации.\n        2. Проверка видимости формы.\n        3. Заполнение формы данными.\n        4. Клик по кнопке &quot;Login&quot;.\n        5. Проверка отображения сообщения об ошибке.\n\n    Ожидаемый результат:\n        При вводе неверных данных отображается соответствующее уведомление.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Page URL expected to be 're.compile('.*/#/dashboard')'\nActual value: https://nikita-filonov.github.io/qa-automation-engineer-ui-course/#/auth/login \nCall log:\n  - Expect \"to_have_url\" with timeout 5000ms\n  - waiting for locator(\":root\")\n    9 × locator resolved to <html lang=\"en\">…</html>\n      - unexpected value \"https://nikita-filonov.github.io/qa-automation-engineer-ui-course/#/auth/login\"","statusTrace":"self = <authentication.test_authorization.TestAuthorization object at 0x7fc712d714d0>\nlogin_page = <pages.authentication.login_page.LoginPage object at 0x7fc711801cd0>\nemail = 'user.name@gmail.com', password = 'password'\n\n    @allure.title(\"User login with wrong email or password\")\n    @allure.tag(AllureTag.NEGATIVE)\n    @allure.story(AllureStory.INVALID_AUTH)\n    @allure.sub_suite(AllureStory.INVALID_AUTH)\n    @allure.severity(Severity.NORMAL)\n    @pytest.mark.parametrize(\n        \"email, password\",\n        [\n            (\"  \", \"password\"),\n            (\"user.name@gmail.com\", \"  \"),\n            (\"user.name@gmail.com\", \"password\"),\n        ],\n    )\n    def test_wrong_email_or_password_authorization(\n        self, login_page: LoginPage, email: str, password: str\n    ):\n        \"\"\"\n        Тест проверяет поведение страницы авторизации при вводе неверной электронной почты или пароля.\n    \n        Описание:\n            Пользователь пытается войти с разными комбинациями невалидных данных (пустой email, пустой пароль,\n            корректные данные, но несуществующий аккаунт). После отправки формы проверяется появление уведомления\n            о неверных данных.\n    \n        Аргументы:\n            email (str): Электронная почта для входа.\n            password (str): Пароль для входа.\n    \n        Шаги:\n            1. Переход на страницу авторизации.\n            2. Проверка видимости формы.\n            3. Заполнение формы данными.\n            4. Клик по кнопке \"Login\".\n            5. Проверка отображения сообщения об ошибке.\n    \n        Ожидаемый результат:\n            При вводе неверных данных отображается соответствующее уведомление.\n        \"\"\"\n        login_page.visit(AppRoute.AUTORIZATION)\n        login_page.form.check_visible()\n        login_page.form.fill(email, password)\n>       login_page.click_login_btn()\n\ntests/authentication/test_authorization.py:63: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/authentication/login_page.py:57: in click_login_btn\n    self.check_current_url(re.compile(r\".*/#/dashboard\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.authentication.login_page.LoginPage object at 0x7fc711801cd0>\nexpected_url = re.compile('.*/#/dashboard')\n\n    def check_current_url(self, expected_url: Pattern[str]) -> None:\n        \"\"\"\n        Проверяет, что текущий URL совпадает с ожидаемым.\n    \n        Аргументы:\n            url (Pattern[str]): Регулярное выражение или строка ожидаемого URL.\n        \"\"\"\n        step = f\"Checking that current url matches pattern '{expected_url.pattern}'\"\n        with allure.step(step):\n            logger.info(step)\n>           expect(self.page).to_have_url(expected_url)\nE           AssertionError: Page URL expected to be 're.compile('.*/#/dashboard')'\nE           Actual value: https://nikita-filonov.github.io/qa-automation-engineer-ui-course/#/auth/login \nE           Call log:\nE             - Expect \"to_have_url\" with timeout 5000ms\nE             - waiting for locator(\":root\")\nE               9 × locator resolved to <html lang=\"en\">…</html>\nE                 - unexpected value \"https://nikita-filonov.github.io/qa-automation-engineer-ui-course/#/auth/login\"\n\npages/base_page.py:95: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"save_allure_environment","time":{"start":1752918519443,"stop":1752918519443,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1752918519443,"stop":1752918519443,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1752918519443,"stop":1752918519443,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1752918519443,"stop":1752918519443,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1752918519443,"stop":1752918519443,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"playwright","time":{"start":1752918519444,"stop":1752918519760,"duration":316},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"chromium_page","time":{"start":1752918545566,"stop":1752918545854,"duration":288},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"login_page","time":{"start":1752918545854,"stop":1752918545854,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n        Тест проверяет поведение страницы авторизации при вводе неверной электронной почты или пароля.\n\n        Описание:\n            Пользователь пытается войти с разными комбинациями невалидных данных (пустой email, пустой пароль,\n            корректные данные, но несуществующий аккаунт). После отправки формы проверяется появление уведомления\n            о неверных данных.\n\n        Аргументы:\n            email (str): Электронная почта для входа.\n            password (str): Пароль для входа.\n\n        Шаги:\n            1. Переход на страницу авторизации.\n            2. Проверка видимости формы.\n            3. Заполнение формы данными.\n            4. Клик по кнопке \"Login\".\n            5. Проверка отображения сообщения об ошибке.\n\n        Ожидаемый результат:\n            При вводе неверных данных отображается соответствующее уведомление.\n        ","status":"failed","statusMessage":"AssertionError: Page URL expected to be 're.compile('.*/#/dashboard')'\nActual value: https://nikita-filonov.github.io/qa-automation-engineer-ui-course/#/auth/login \nCall log:\n  - Expect \"to_have_url\" with timeout 5000ms\n  - waiting for locator(\":root\")\n    9 × locator resolved to <html lang=\"en\">…</html>\n      - unexpected value \"https://nikita-filonov.github.io/qa-automation-engineer-ui-course/#/auth/login\"","statusTrace":"self = <authentication.test_authorization.TestAuthorization object at 0x7fc712d714d0>\nlogin_page = <pages.authentication.login_page.LoginPage object at 0x7fc711801cd0>\nemail = 'user.name@gmail.com', password = 'password'\n\n    @allure.title(\"User login with wrong email or password\")\n    @allure.tag(AllureTag.NEGATIVE)\n    @allure.story(AllureStory.INVALID_AUTH)\n    @allure.sub_suite(AllureStory.INVALID_AUTH)\n    @allure.severity(Severity.NORMAL)\n    @pytest.mark.parametrize(\n        \"email, password\",\n        [\n            (\"  \", \"password\"),\n            (\"user.name@gmail.com\", \"  \"),\n            (\"user.name@gmail.com\", \"password\"),\n        ],\n    )\n    def test_wrong_email_or_password_authorization(\n        self, login_page: LoginPage, email: str, password: str\n    ):\n        \"\"\"\n        Тест проверяет поведение страницы авторизации при вводе неверной электронной почты или пароля.\n    \n        Описание:\n            Пользователь пытается войти с разными комбинациями невалидных данных (пустой email, пустой пароль,\n            корректные данные, но несуществующий аккаунт). После отправки формы проверяется появление уведомления\n            о неверных данных.\n    \n        Аргументы:\n            email (str): Электронная почта для входа.\n            password (str): Пароль для входа.\n    \n        Шаги:\n            1. Переход на страницу авторизации.\n            2. Проверка видимости формы.\n            3. Заполнение формы данными.\n            4. Клик по кнопке \"Login\".\n            5. Проверка отображения сообщения об ошибке.\n    \n        Ожидаемый результат:\n            При вводе неверных данных отображается соответствующее уведомление.\n        \"\"\"\n        login_page.visit(AppRoute.AUTORIZATION)\n        login_page.form.check_visible()\n        login_page.form.fill(email, password)\n>       login_page.click_login_btn()\n\ntests/authentication/test_authorization.py:63: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/authentication/login_page.py:57: in click_login_btn\n    self.check_current_url(re.compile(r\".*/#/dashboard\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.authentication.login_page.LoginPage object at 0x7fc711801cd0>\nexpected_url = re.compile('.*/#/dashboard')\n\n    def check_current_url(self, expected_url: Pattern[str]) -> None:\n        \"\"\"\n        Проверяет, что текущий URL совпадает с ожидаемым.\n    \n        Аргументы:\n            url (Pattern[str]): Регулярное выражение или строка ожидаемого URL.\n        \"\"\"\n        step = f\"Checking that current url matches pattern '{expected_url.pattern}'\"\n        with allure.step(step):\n            logger.info(step)\n>           expect(self.page).to_have_url(expected_url)\nE           AssertionError: Page URL expected to be 're.compile('.*/#/dashboard')'\nE           Actual value: https://nikita-filonov.github.io/qa-automation-engineer-ui-course/#/auth/login \nE           Call log:\nE             - Expect \"to_have_url\" with timeout 5000ms\nE             - waiting for locator(\":root\")\nE               9 × locator resolved to <html lang=\"en\">…</html>\nE                 - unexpected value \"https://nikita-filonov.github.io/qa-automation-engineer-ui-course/#/auth/login\"\n\npages/base_page.py:95: AssertionError","steps":[{"name":"Opening the url: 'AppRoute.LOGIN'","time":{"start":1752918545855,"stop":1752918547087,"duration":1232},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Check visible login form","time":{"start":1752918547087,"stop":1752918547189,"duration":102},"status":"passed","steps":[{"name":"Checking that Input 'Поле Email' is visible","time":{"start":1752918547087,"stop":1752918547139,"duration":52},"status":"passed","steps":[{"name":"Getting locator with 'data-testid=login-form-email-input' at index' 0'","time":{"start":1752918547087,"stop":1752918547087,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Checking that Input 'Поле Email' has a value ''","time":{"start":1752918547139,"stop":1752918547154,"duration":15},"status":"passed","steps":[{"name":"Getting locator with 'data-testid=login-form-email-input' at index' 0'","time":{"start":1752918547139,"stop":1752918547139,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Checking that Input 'Поле Password' is visible","time":{"start":1752918547154,"stop":1752918547169,"duration":15},"status":"passed","steps":[{"name":"Getting locator with 'data-testid=login-form-password-input' at index' 0'","time":{"start":1752918547154,"stop":1752918547154,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Checking that Input 'Поле Password' has a value ''","time":{"start":1752918547169,"stop":1752918547189,"duration":20},"status":"passed","steps":[{"name":"Getting locator with 'data-testid=login-form-password-input' at index' 0'","time":{"start":1752918547169,"stop":1752918547169,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[{"name":"email","value":"''"},{"name":"password","value":"''"}],"shouldDisplayMessage":false,"stepsCount":8,"attachmentsCount":0,"hasContent":true},{"name":"Fill login form","time":{"start":1752918547189,"stop":1752918550244,"duration":3055},"status":"passed","steps":[{"name":"Checking that Input 'Поле Email' is visible","time":{"start":1752918547189,"stop":1752918547210,"duration":21},"status":"passed","steps":[{"name":"Getting locator with 'data-testid=login-form-email-input' at index' 0'","time":{"start":1752918547189,"stop":1752918547189,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Fill Input 'Поле Email' to value user.name@gmail.com with delayed typing","time":{"start":1752918547210,"stop":1752918549325,"duration":2115},"status":"passed","steps":[{"name":"Getting locator with 'data-testid=login-form-email-input' at index' 0'","time":{"start":1752918547210,"stop":1752918547210,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Checking that Input 'Поле Email' has a value 'user.name@gmail.com'","time":{"start":1752918549325,"stop":1752918549333,"duration":8},"status":"passed","steps":[{"name":"Getting locator with 'data-testid=login-form-email-input' at index' 0'","time":{"start":1752918549325,"stop":1752918549325,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Checking that Input 'Поле Password' is visible","time":{"start":1752918549334,"stop":1752918549342,"duration":8},"status":"passed","steps":[{"name":"Getting locator with 'data-testid=login-form-password-input' at index' 0'","time":{"start":1752918549334,"stop":1752918549334,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Fill Input 'Поле Password' to value password with delayed typing","time":{"start":1752918549343,"stop":1752918550236,"duration":893},"status":"passed","steps":[{"name":"Getting locator with 'data-testid=login-form-password-input' at index' 0'","time":{"start":1752918549343,"stop":1752918549343,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Checking that Input 'Поле Password' has a value 'password'","time":{"start":1752918550236,"stop":1752918550244,"duration":8},"status":"passed","steps":[{"name":"Getting locator with 'data-testid=login-form-password-input' at index' 0'","time":{"start":1752918550236,"stop":1752918550236,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[{"name":"email","value":"'user.name@gmail.com'"},{"name":"password","value":"'password'"}],"shouldDisplayMessage":false,"stepsCount":12,"attachmentsCount":0,"hasContent":true},{"name":"Checking that Button 'Кнопка Login' is visible","time":{"start":1752918550244,"stop":1752918550251,"duration":7},"status":"passed","steps":[{"name":"Getting locator with 'data-testid=login-page-login-button' at index' 0'","time":{"start":1752918550244,"stop":1752918550244,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Clicking Button 'Кнопка Login'","time":{"start":1752918550251,"stop":1752918550341,"duration":90},"status":"passed","steps":[{"name":"Getting locator with 'data-testid=login-page-login-button' at index' 0'","time":{"start":1752918550251,"stop":1752918550251,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Checking that current url matches pattern '.*/#/dashboard'","time":{"start":1752918550341,"stop":1752918555363,"duration":5022},"status":"failed","statusMessage":"AssertionError: Page URL expected to be 're.compile('.*/#/dashboard')'\nActual value: https://nikita-filonov.github.io/qa-automation-engineer-ui-course/#/auth/login \nCall log:\n  - Expect \"to_have_url\" with timeout 5000ms\n  - waiting for locator(\":root\")\n    9 × locator resolved to <html lang=\"en\">…</html>\n      - unexpected value \"https://nikita-filonov.github.io/qa-automation-engineer-ui-course/#/auth/login\"\n\n","statusTrace":"  File \"/home/runner/work/autotests-ui/autotests-ui/pages/base_page.py\", line 95, in check_current_url\n    expect(self.page).to_have_url(expected_url)\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/playwright/sync_api/_generated.py\", line 19044, in to_have_url\n    self._sync(\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/playwright/_impl/_sync_base.py\", line 115, in _sync\n    return task.result()\n           ^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/playwright/_impl/_assertions.py\", line 129, in to_have_url\n    await self._expect_impl(\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/playwright/_impl/_assertions.py\", line 75, in _expect_impl\n    raise AssertionError(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"da1c8dc1e588e3f4","name":"log","source":"da1c8dc1e588e3f4.txt","type":"text/plain","size":1367}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":28,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"chromium_page::0","time":{"start":1752918555383,"stop":1752918555915,"duration":532},"status":"passed","steps":[],"attachments":[{"uid":"16015c24a440d289","name":"trace","source":"16015c24a440d289.zip","type":"application/zip","size":384132},{"uid":"96cddc11d8cbe047","name":"video","source":"96cddc11d8cbe047.webm","type":"video/webm","size":95748}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true},{"name":"playwright::0","time":{"start":1752918571178,"stop":1752918571189,"duration":11},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"save_allure_environment::0","time":{"start":1752918571190,"stop":1752918571190,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"suite","value":"Authentication"},{"name":"epic","value":"LMS system"},{"name":"severity","value":"normal"},{"name":"subSuite","value":"Invalid Credentials Handling"},{"name":"parentSuite","value":"LMS system"},{"name":"feature","value":"Authentication"},{"name":"story","value":"Authorization"},{"name":"story","value":"Invalid Credentials Handling"},{"name":"tag","value":"NEGATIVE"},{"name":"tag","value":"authorization"},{"name":"tag","value":"regression"},{"name":"host","value":"pkrvmq0rgcvqdmg"},{"name":"thread","value":"6071-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.authentication.test_authorization"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chromium_page","value":"'Browser.WEBKIT'"},{"name":"email","value":"'user.name@gmail.com'"},{"name":"password","value":"'password'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["authorization","regression","NEGATIVE"]},"source":"cfe9c4611c49b0db.json","parameterValues":["'Browser.WEBKIT'","'user.name@gmail.com'","'password'"]}